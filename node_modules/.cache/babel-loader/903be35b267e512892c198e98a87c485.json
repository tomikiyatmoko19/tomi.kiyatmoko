{"ast":null,"code":"import _regeneratorRuntime from\"D:/project01/react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/project01/react/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useForm}from'react-hook-form';import emailjs from'emailjs-com';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.min.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";require('dotenv').config();var Contact=function Contact(){var _useForm=useForm(),register=_useForm.register,errors=_useForm.errors,handleSubmit=_useForm.handleSubmit,reset=_useForm.reset;var toastifySuccess=function toastifySuccess(){toast('Form sent!',{position:'bottom-right',autoClose:5000,hideProgressBar:true,closeOnClick:true,pauseOnHover:true,draggable:false,className:'submit-feedback success',toastId:'notifyToast'});};var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var templateParams;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;templateParams={name:data.name,email:data.email,subject:data.subject,message:data.message};_context.next=4;return emailjs.send(process.env.REACT_APP_SERVICE_ID,process.env.REACT_APP_TEMPLATE_ID,templateParams,process.env.REACT_APP_USER_ID);case 4:reset();toastifySuccess();_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"section\",{id:\"contact\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row section-head\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"two columns header-col\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Contact Me\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ten columns\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"contactForm\",children:/*#__PURE__*/_jsxs(\"form\",{id:\"contact-form\",onSubmit:handleSubmit(onSubmit),noValidate:true,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",ref:register({required:{value:true,message:'Please enter your name'},maxLength:{value:30,message:'Please use 30 characters or less'}}),className:\"form-control formInput\",placeholder:\"Name\"}),errors.name&&/*#__PURE__*/_jsx(\"span\",{className:\"errorMessage\",children:errors.name.message})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",ref:register({required:true,pattern:/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/}),className:\"form-control formInput\",placeholder:\"Email address\"}),errors.email&&/*#__PURE__*/_jsx(\"span\",{className:\"errorMessage\",children:\"Please enter a valid email address\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"subject\",ref:register({required:{value:true,message:'Please enter a subject'},maxLength:{value:75,message:'Subject cannot exceed 75 characters'}}),className:\"form-control formInput\",placeholder:\"Subject\"}),errors.subject&&/*#__PURE__*/_jsx(\"span\",{className:\"errorMessage\",children:errors.subject.message})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-6\",children:[/*#__PURE__*/_jsx(\"textarea\",{rows:3,name:\"message\",ref:register({required:true}),className:\"form-control formInput custome\",placeholder:\"Message\"}),errors.message&&/*#__PURE__*/_jsx(\"span\",{className:\"errorMessage\",children:\"Please enter a message\"})]})}),/*#__PURE__*/_jsx(\"button\",{className:\"submit-btn\",type:\"submit\",children:\"Submit\"})]})}),/*#__PURE__*/_jsx(ToastContainer,{})]})})]})});};export default Contact;","map":{"version":3,"sources":["D:/project01/react/frontend/src/komponen/Contact.js"],"names":["useForm","emailjs","ToastContainer","toast","require","config","Contact","register","errors","handleSubmit","reset","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","templateParams","name","email","subject","message","send","process","env","REACT_APP_SERVICE_ID","REACT_APP_TEMPLATE_ID","REACT_APP_USER_ID","console","log","required","value","maxLength","pattern"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport emailjs from 'emailjs-com';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nrequire('dotenv').config()\r\n\r\nconst Contact = () => {\r\n  const { register, errors, handleSubmit, reset } = useForm();\r\n    \r\n  const toastifySuccess = () => {\r\n    toast('Form sent!', {\r\n      position: 'bottom-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: false,\r\n      className: 'submit-feedback success',\r\n      toastId: 'notifyToast'\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    // Send form email\r\n    try {\r\n      const templateParams = {\r\n        name: data.name,\r\n        email: data.email,\r\n        subject: data.subject,\r\n        message: data.message\r\n      };\r\n\r\n      await emailjs.send(\r\n        process.env.REACT_APP_SERVICE_ID,\r\n        process.env.REACT_APP_TEMPLATE_ID,\r\n        templateParams,\r\n        process.env.REACT_APP_USER_ID\r\n      );\r\n\r\n      reset();\r\n      toastifySuccess();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (        \r\n       \r\n    <section id=\"contact\">\r\n      <div className=\"row section-head\">\r\n\r\n        <div className=\"two columns header-col\">\r\n\r\n        <h1>Contact Me</h1>\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\"\">\r\n          <div className=\"ten columns\">\r\n            <div className='contactForm'>\r\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <div className=''>\r\n                  <div className='col-6'>\r\n                    <input\r\n                      type='text'\r\n                      name='name'\r\n                      ref={register({\r\n                        required: { value: true, message: 'Please enter your name' },\r\n                        maxLength: {\r\n                          value: 30,\r\n                          message: 'Please use 30 characters or less'\r\n                        }\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Name'\r\n                    ></input>\r\n                    {errors.name && <span className='errorMessage'>{errors.name.message}</span>}\r\n                  </div>\r\n                  <div className='col-6'>\r\n                    <input\r\n                      type='email'\r\n                      name='email'\r\n                      ref={register({\r\n                        required: true,\r\n                        pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Email address'\r\n                    ></input>\r\n                    {errors.email && (\r\n                      <span className='errorMessage'>Please enter a valid email address</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* Row 2 of form */}\r\n                <div className=''>\r\n                  <div className='col-6'>\r\n                    <input\r\n                      type='text'\r\n                      name='subject'\r\n                      ref={register({\r\n                        required: { value: true, message: 'Please enter a subject' },\r\n                        maxLength: {\r\n                          value: 75,\r\n                          message: 'Subject cannot exceed 75 characters'\r\n                        }\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Subject'\r\n                    ></input>\r\n                    {errors.subject && (\r\n                      <span className='errorMessage'>{errors.subject.message}</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* Row 3 of form */}\r\n                <div className=''>\r\n                  <div className='col-6'>\r\n                    <textarea\r\n                      rows={3}\r\n                      name='message'\r\n                      ref={register({\r\n                        required: true\r\n                      })}\r\n                      className='form-control formInput custome'\r\n                      placeholder='Message'\r\n                    ></textarea>\r\n                    {errors.message && <span className='errorMessage'>Please enter a message</span>}\r\n                  </div>\r\n                </div>\r\n                <button className='submit-btn' type='submit'>\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <ToastContainer />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;"]},"metadata":{},"sourceType":"module"}