{"ast":null,"code":"var _jsxFileName = \"D:\\\\project01\\\\react\\\\frontend\\\\src\\\\komponen\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst Contact = () => {\n  _s();\n\n  const {\n    register,\n    errors,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n\n  const onSubmit = async data => {\n    // Send form email\n    try {\n      const templateParams = {\n        name: data.name,\n        email: data.email,\n        subject: data.subject,\n        message: data.message\n      };\n      await emailjs.send(process.env.REACT_APP_SERVICE_ID, process.env.REACT_APP_TEMPLATE_ID, templateParams, process.env.REACT_APP_USER_ID);\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Contact Me \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-10 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contactForm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"contact-form\",\n          onSubmit: handleSubmit(onSubmit),\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row formRow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                ref: register({\n                  required: {\n                    value: true,\n                    message: 'Please enter your name'\n                  },\n                  maxLength: {\n                    value: 30,\n                    message: 'Please use 30 characters or less'\n                  }\n                }),\n                className: \"form-control formInput\",\n                placeholder: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"errorMessage\",\n                children: errors.name.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                ref: register({\n                  required: true,\n                  pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                }),\n                className: \"form-control formInput\",\n                placeholder: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"errorMessage\",\n                children: \"Please enter a valid email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row formRow\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"subject\",\n                ref: register({\n                  required: {\n                    value: true,\n                    message: 'Please enter a subject'\n                  },\n                  maxLength: {\n                    value: 75,\n                    message: 'Subject cannot exceed 75 characters'\n                  }\n                }),\n                className: \"form-control formInput\",\n                placeholder: \"Subject\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), errors.subject && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"errorMessage\",\n                children: errors.subject.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row formRow\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                rows: 3,\n                name: \"message\",\n                ref: register({\n                  required: true\n                }),\n                className: \"form-control formInput custome\",\n                placeholder: \"Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), errors.message && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"errorMessage\",\n                children: \"Please enter a message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Contact, \"oKAnpUyZAKrHAyK19qEcyWWx3sE=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["D:/project01/react/frontend/src/komponen/Contact.js"],"names":["useForm","emailjs","ToastContainer","toast","require","config","Contact","register","errors","handleSubmit","reset","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","templateParams","name","email","subject","message","send","process","env","REACT_APP_SERVICE_ID","REACT_APP_TEMPLATE_ID","REACT_APP_USER_ID","e","console","log","required","value","maxLength","pattern"],"mappings":"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","sourcesContent":["import { useForm } from 'react-hook-form';\r\nimport emailjs from 'emailjs-com';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nrequire('dotenv').config()\r\n\r\nconst Contact = () => {\r\n  const { register, errors, handleSubmit, reset } = useForm();\r\n    \r\n  const toastifySuccess = () => {\r\n    toast('Form sent!', {\r\n      position: 'bottom-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: false,\r\n      className: 'submit-feedback success',\r\n      toastId: 'notifyToast'\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    // Send form email\r\n    try {\r\n      const templateParams = {\r\n        name: data.name,\r\n        email: data.email,\r\n        subject: data.subject,\r\n        message: data.message\r\n      };\r\n\r\n      await emailjs.send(\r\n        process.env.REACT_APP_SERVICE_ID,\r\n        process.env.REACT_APP_TEMPLATE_ID,\r\n        templateParams,\r\n        process.env.REACT_APP_USER_ID\r\n      );\r\n\r\n      reset();\r\n      toastifySuccess();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (   \r\n      <div className=\"contact\">   \r\n        <h1> Contact Me </h1>\r\n          <div className='col-10 text-center'>\r\n            <div className='contactForm'>\r\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                {/* Row 1 of form */}\r\n                <div className='row formRow'>\r\n                  <div className='col-6'>\r\n                    <input\r\n                      type='text'\r\n                      name='name'\r\n                      ref={register({\r\n                        required: { value: true, message: 'Please enter your name' },\r\n                        maxLength: {\r\n                          value: 30,\r\n                          message: 'Please use 30 characters or less'\r\n                        }\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Name'\r\n                    ></input>\r\n                    {errors.name && <span className='errorMessage'>{errors.name.message}</span>}\r\n                  </div>\r\n                  <div className='col-6'>\r\n                    <input\r\n                      type='email'\r\n                      name='email'\r\n                      ref={register({\r\n                        required: true,\r\n                        pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Email address'\r\n                    ></input>\r\n                    {errors.email && (\r\n                      <span className='errorMessage'>Please enter a valid email address</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* Row 2 of form */}\r\n                <div className='row formRow'>\r\n                  <div className='col'>\r\n                    <input\r\n                      type='text'\r\n                      name='subject'\r\n                      ref={register({\r\n                        required: { value: true, message: 'Please enter a subject' },\r\n                        maxLength: {\r\n                          value: 75,\r\n                          message: 'Subject cannot exceed 75 characters'\r\n                        }\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Subject'\r\n                    ></input>\r\n                    {errors.subject && (\r\n                      <span className='errorMessage'>{errors.subject.message}</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {/* Row 3 of form */}\r\n                <div className='row formRow'>\r\n                  <div className='col'>\r\n                    <textarea\r\n                      rows={3}\r\n                      name='message'\r\n                      ref={register({\r\n                        required: true\r\n                      })}\r\n                      className='form-control formInput custome'\r\n                      placeholder='Message'\r\n                    ></textarea>\r\n                    {errors.message && <span className='errorMessage'>Please enter a message</span>}\r\n                  </div>\r\n                </div>\r\n                <button className='submit-btn' type='submit'>\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <ToastContainer />\r\n          </div>\r\n          </div>                 \r\n  );\r\n};\r\n\r\nexport default Contact;"]},"metadata":{},"sourceType":"module"}